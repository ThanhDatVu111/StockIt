import { createSlice, PayloadAction } from "@reduxjs/toolkit";

export interface InitialStateTypes {
  isSidebarCollapsed: boolean;
  isDarkMode: boolean;
}

const initialState: InitialStateTypes = {
  isSidebarCollapsed: false,
  isDarkMode: false,
};
// isSidebarCollapsed is set to false, meaning the sidebar is not collapsed by default
// isDarkMode is set to false, meaning the app is not in dark mode by default

export const globalSlice = createSlice({
  name: "global",
  initialState,
  reducers: {
    setIsSidebarCollapsed: (state, action: PayloadAction<boolean>) => {
      state.isSidebarCollapsed = action.payload;
    },
    setIsDarkMode: (state, action: PayloadAction<boolean>) => {
      state.isDarkMode = action.payload;
    },
  },
});
//This part organizes state management for isSidebarCollapsed and isDarkMode by defining their
//initial values and how they can be updated. It also generates the actions to modify these states.

export const { setIsSidebarCollapsed, setIsDarkMode } = globalSlice.actions;
//This part exports the actions generated by the createSlice function.

export default globalSlice.reducer;
//This partexports the reducer to manage the state updates in the Redux store